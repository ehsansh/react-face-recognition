{"version":3,"sources":["components/ImageLinkForm/ImageLinkForm.js","components/Logo/brain.png","components/Logo/Logo.js","components/Navigation/Navigation.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","particleOptions.js","components/Signin/Signin.js","App.js","reportWebVitals.js","index.js"],"names":["ImageLinkForm","onInputChange","onSubmitButton","className","onChange","type","onClick","Logo","options","max","style","height","width","alt","src","brain","Navigation","onRouteChange","display","justifyContent","Rank","FaceRecognition","imgUrl","box","id","heigh","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particleOptions","background","color","value","fpsLimit","interactivity","events","enable","mode","onHover","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","links","collisions","move","direction","outMode","random","speed","straight","number","density","value_area","shape","detectRetina","Singin","for","name","href","app","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiface","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFacebox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d9cdae19.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({onInputChange,onSubmitButton }) =>{\r\n    return(\r\n        <div>\r\n            <p className=\"f3\">\r\n                This brain detects faces in your picture. Give it a try!\r\n                <br />\r\n                You can copy and paste this url: \r\n                <br />\r\n                https://res.cloudinary.com/demo/image/upload/front_face.jpg\r\n            </p>\r\n            <div className=\"center\">\r\n                <div className=\"form center pa4 br3 shadow-5\">\r\n                    <input onChange={ onInputChange } className=\"f5 pa2 w-70 center\" type=\"text\" />\r\n                    <button onClick={onSubmitButton} className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\">Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","export default __webpack_public_path__ + \"static/media/brain.481401c4.png\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport brain from './brain.png';\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                <img alt=\"logo\" src={brain} />\r\n            </div>\r\n        </Tilt>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange }) => {\r\n    return(\r\n        <nav style={{ display:'flex',justifyContent:'flex-end' }}>\r\n            <p onClick={() => onRouteChange('signin')} className=\"f3 link dim black underline pa3 pointer\">\r\n                Sign out\r\n            </p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Rank = () =>{\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Ehsan your current rank is ...' }\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#5' } \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imgUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imgUrl} width='500px' heigh='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","const particleOptions = {\r\n\tbackground: {\r\n\t\tcolor: {\r\n\t\tvalue: \"#0d47a1\",\r\n\t\t},\r\n\t},\r\n\tfpsLimit: 60,\r\n\tinteractivity: {\r\n\t\tevents: {\r\n\t\tonClick: {\r\n\t\t\tenable: true,\r\n\t\t\tmode: \"push\",\r\n\t\t},\r\n\t\tonHover: {\r\n\t\t\tenable: true,\r\n\t\t\tmode: \"repulse\",\r\n\t\t},\r\n\t\tresize: true,\r\n\t\t},\r\n\t\tmodes: {\r\n\t\tbubble: {\r\n\t\t\tdistance: 400,\r\n\t\t\tduration: 2,\r\n\t\t\topacity: 0.8,\r\n\t\t\tsize: 40,\r\n\t\t},\r\n\t\tpush: {\r\n\t\t\tquantity: 4,\r\n\t\t},\r\n\t\trepulse: {\r\n\t\t\tdistance: 200,\r\n\t\t\tduration: 0.4,\r\n\t\t},\r\n\t\t},\r\n\t},\r\n\tparticles: {\r\n\t\tcolor: {\r\n\t\tvalue: \"#ffffff\",\r\n\t\t},\r\n\t\tlinks: {\r\n\t\tcolor: \"#ffffff\",\r\n\t\tdistance: 150,\r\n\t\tenable: true,\r\n\t\topacity: 0.5,\r\n\t\twidth: 1,\r\n\t\t},\r\n\t\tcollisions: {\r\n\t\tenable: true,\r\n\t\t},\r\n\t\tmove: {\r\n\t\tdirection: \"none\",\r\n\t\tenable: true,\r\n\t\toutMode: \"bounce\",\r\n\t\trandom: false,\r\n\t\tspeed: 3,\r\n\t\tstraight: false,\r\n\t\t},\r\n\t\tnumber: {\r\n\t\tdensity: {\r\n\t\t\tenable: true,\r\n\t\t\tvalue_area: 1100,\r\n\t\t},\r\n\t\tvalue: 80,\r\n\t\t},\r\n\t\topacity: {\r\n\t\tvalue: 0.5,\r\n\t\t},\r\n\t\tshape: {\r\n\t\ttype: \"circle\",\r\n\t\t},\r\n\t\tsize: {\r\n\t\trandom: true,\r\n\t\tvalue: 5,\r\n\t\t},\r\n\t},\r\n\tdetectRetina: true,     \r\n}\r\n\r\nexport default particleOptions;","import React from 'react';\r\n\r\nconst Singin = ({onRouteChange}) => {\r\n    return(\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n        <form className=\"measure center\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n            <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n            </div>\r\n            <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n            </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n            <input onClick={() => onRouteChange('home') } className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n            <a href=\"#0\" className=\"f6 link dim black db\">Register</a>\r\n            </div>\r\n        </form>\r\n        </main>\r\n    </article>\r\n    );\r\n}\r\n\r\nexport default Singin;","/* eslint-disable no-unused-vars */\r\n\r\nimport './App.css';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Logo from './components/Logo/Logo';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Rank from './components/Rank/Rank';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Particles from \"react-tsparticles\";\r\nimport particleOptions from './particleOptions';\r\nimport { render } from '@testing-library/react';\r\nimport { Component } from 'react';\r\nimport Clarifai from 'clarifai';\r\nimport Singin from './components/Signin/Signin';\r\n\r\n\r\nconst app = new Clarifai.App({\r\n\tapiKey:'d35a2ce4406d4e61807585fc37df1e33'\r\n});\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tinput:'',\r\n\t\t\timgUrl:'',\r\n\t\t\tbox:{},\r\n\t\t\troute:'home'\r\n\t\t}\r\n\t}\r\n\r\n\tcalculateFaceLocation = (data) =>{\r\n\t\tconst clarifaiface = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n\t\tconst image = document.getElementById('inputimage');\r\n\r\n\t\tconst width = Number(image.width);\r\n\t\tconst height = Number(image.height);\r\n\t\treturn{\r\n\t\t\tleftCol:clarifaiface.left_col *width,\r\n\t\t\ttopRow:clarifaiface.top_row *height,\r\n\t\t\trightCol:width - (clarifaiface.right_col *width ),\r\n\t\t\tbottomRow:height - (clarifaiface.bottom_row * height)\r\n\t\t}\r\n\t}\r\n\r\n\tdisplayFacebox = (box) => {\r\n\t\tconsole.log(box);\r\n\t\tthis.setState({ box:box })\r\n\t}\r\n\r\n\tonInputChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tinput:event.target.value \r\n\t\t})\r\n\t}\r\n\tonSubmitButton = () =>{\r\n\t\tthis.setState({\r\n\t\t\timgUrl:this.state.input\r\n\t\t})\r\n\t\tapp.models.predict(Clarifai.FACE_DETECT_MODEL,this.state.input)\r\n\t\t.then(response => this.displayFacebox( this.calculateFaceLocation(response) ) )\r\n\t\t.catch( err => console.log(err) );\r\n\t}\r\n\tonRouteChange = (route) =>{\r\n\t\tthis.setState({route:route})\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Particles className=\"particles\" id=\"tsparticles\" options={particleOptions} />\r\n\t\t\t\t<Navigation onRouteChange={this.onRouteChange} />\r\n\t\t\t\t{ this.state.route === 'signin' \r\n\t\t\t\t ? <Singin onRouteChange={this.onRouteChange} />\r\n\t\t\t\t: \r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Logo />\r\n\t\t\t\t\t<Rank />\r\n\t\t\t\t\t<ImageLinkForm \r\n\t\t\t\t\t\tonInputChange = {this.onInputChange } \r\n\t\t\t\t\t\tonSubmitButton = {this.onSubmitButton}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FaceRecognition box={this.state.box} imgUrl={this.state.imgUrl} />\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}